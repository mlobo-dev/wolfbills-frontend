{"version":3,"sources":["components/card.js","components/form-group.js","app/apiservice.js","app/exceptions/ErroValidacao.js","app/services/usuarioService.js","components/toastr.js","views/cadastroUsuario.js","app/services/localStorageService.js","app/services/authService.js","main/ProvedorAutenticacao.js","views/login.js","views/home.js","components/select-menu.js","views/lancamentos/lancamentosTable.js","app/services/lancamentoService.js","views/lancamentos/consulta-lancamentos.js","views/lancamentos/cadastro-lancamentos.js","main/rotas.js","components/nav-bar-item.js","components/navbar.js","main/App.js","index.js"],"names":["Card","className","this","props","title","children","React","Component","FormGroup","htmlFor","label","httpClient","axios","create","baseURL","ApiService","apiurl","url","objeto","requestUrl","post","put","delete","get","ErroValidacao","mensagens","UsuarioService","credenciais","id","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","mensagemAlerta","options","CadastroUsuario","state","cadastrar","service","validar","error","forEach","msg","salvar","then","response","history","catch","data","cancelar","type","value","onChange","e","setState","target","aria-describedby","placeholder","onClick","withRouter","LocalStorageService","chave","valor","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","AuthService","obterItem","adicionarItem","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","usuarioAutenticado","isAutenticado","iniciarSessao","logar","encerrarSessao","removerUsuarioAutenticado","console","log","contexto","Login","entrar","autenticar","context","erro","prepareCadastrar","style","position","left","contextType","Home","saldo","usuarioService","usuarioLogado","obterSaldoPorIdUsuario","href","role","lista","map","option","index","key","rows","lancamentos","lancamento","descricao","currencyFormatter","format","locale","tipoLancamento","mes","statusLancamento","disabled","alterarStatus","editarAction","deleteAction","scope","LancamentoService","filtro","params","ano","status","ConsultaLancamentos","showConfirmDialog","lancamentoDeletar","buscar","messages","consultar","resposta","editar","indexOf","abrirConfirmacao","cancelarDelecao","deletar","splice","obterListaMeses","tiposLancamento","obterTipos","confirmDialogFooter","icon","header","visible","width","modal","footer","onHide","CadastroLancamentos","idUsuario","atualizando","submit","atualizar","handleChange","evento","name","buscarPeloId","tipos","meses","RotaAutenticada","component","isUsuarioAutenticado","render","componentProps","to","pathname","from","location","Rotas","path","ConsultaLancamento","cadastroLancamentos","NavbarItem","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","App","ReactDOM","document","getElementById"],"mappings":"4PAiBeA,E,uKAZP,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,eAAeC,KAAKC,MAAMC,OACxC,yBAAKH,UAAU,aACVC,KAAKC,MAAME,e,GANbC,IAAMC,WCSVC,MATf,SAAmBL,GACf,OACI,yBAAKF,UAAU,cACf,2BAAOQ,QAASN,EAAMM,SAAUN,EAAMO,OACrCP,EAAME,W,eCLTM,E,OAAaC,EAAMC,OAAO,CAC9BC,QAAS,yCA6BIC,E,WAxBb,WAAYC,GAAS,oBACnBd,KAAKc,OAASA,E,iDAGXC,EAAKC,GACR,IAAMC,EAAU,UAAMjB,KAAKc,QAAX,OAAoBC,GACpC,OAAON,EAAWS,KAAKD,EAAYD,K,0BAGjCD,EAAKC,GACP,IAAMC,EAAU,UAAMjB,KAAKc,QAAX,OAAoBC,GACpC,OAAON,EAAWU,IAAIF,EAAYD,K,6BAG7BD,GACL,IAAME,EAAU,UAAMjB,KAAKc,QAAX,OAAoBC,GACpC,OAAON,EAAWW,OAAOH,K,0BAGvBF,GACF,IAAME,EAAU,UAAMjB,KAAKc,QAAX,OAAoBC,GACpC,OAAON,EAAWY,IAAIJ,O,KCzBXK,MAJf,SAAuBC,GACnBvB,KAAKuB,UAAYA,GC2CNC,E,kDAzCX,aAAe,uCACL,iB,uDAGCC,GACP,OAAOzB,KAAKkB,KAAK,cAAeO,K,6CAGbC,GACnB,OAAO1B,KAAKqB,IAAL,iBAAmBK,M,6BAGvBC,GACH,OAAO3B,KAAKkB,KAAK,IAAKS,K,8BAGlBA,GACJ,IAAMC,EAAQ,GAkBd,GAhBKD,EAAQE,MACTD,EAAME,KAAK,oCAGVH,EAAQI,MAEDJ,EAAQI,MAAMC,MAAM,iCAC5BJ,EAAME,KAAK,2CAFXF,EAAME,KAAK,qCAKVH,EAAQM,OAAUN,EAAQO,eAEpBP,EAAQM,QAAUN,EAAQO,gBACjCN,EAAME,KAAK,6BAFXF,EAAME,KAAK,6CAKXF,GAASA,EAAMO,OAAS,EACxB,MAAM,IAAIb,EAAcM,O,GArCPf,G,iBCiBtB,SAASuB,EAAgBC,EAAQC,EAAUC,GAC9CC,IAAOD,GAAMD,EAAUD,GAGpB,SAASI,EAAaH,GACzBF,EAAgB,OAAQE,EAAU,SAG/B,SAASI,EAAgBJ,GAC5BF,EAAgB,UAAWE,EAAU,WAGlC,SAASK,EAAeL,GAC3BF,EAAgB,SAAUE,EAAU,WA/BxCE,IAAOI,QAAU,CACb,aAAe,EACf,OAAS,EACT,aAAe,EACf,aAAe,EACf,cAAiB,kBACjB,mBAAqB,EACrB,QAAW,KACX,aAAgB,MAChB,aAAgB,OAChB,QAAW,OACX,gBAAmB,OACnB,WAAc,QACd,WAAc,SACd,WAAc,SACd,WAAc,W,ICTZC,E,kDASF,aAAe,IAAD,8BACV,gBARJC,MAAQ,CACJjB,KAAM,GACNE,MAAO,GACPE,MAAO,GACPC,eAAgB,IAGN,EAKda,UAAY,WAAO,IAAD,EAEiC,EAAKD,MAC9CnB,EAAU,CAAEE,KAHJ,EAENA,KACgBE,MAHV,EAEAA,MACiBE,MAHjB,EAEOA,MACiBC,eAHxB,EAEcA,gBAG5B,IACI,EAAKc,QAAQC,QAAQtB,GACvB,MAAOuB,GAKL,OAJaA,EAAM3B,UACd4B,SAAQ,SAAAC,GACTX,EAAaW,OAEV,EAGX,EAAKJ,QACAK,OAAO1B,GACP2B,MAAK,SAAAC,GACFb,EAAgB,8EAChB,EAAKzC,MAAMuD,QAAQ1B,KAAK,aACzB2B,OAAM,SAAAP,GACLT,EAAaS,EAAMK,SAASG,UA1B1B,EAkCdC,SAAW,WACP,EAAK1D,MAAMuD,QAAQ1B,KAAK,WAjCxB,EAAKkB,QAAU,IAAIxB,EAFT,E,qDAsCJ,IAAD,OACL,OAEI,kBAAC,EAAD,CAAMtB,MAAM,2BACR,yBAAKH,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAWS,MAAM,UAAUD,QAAQ,aAC/B,2BAAOqD,KAAK,OACRC,MAAO7D,KAAK8C,MAAMjB,KAClBiC,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEnC,KAAMkC,EAAEE,OAAOJ,SAC9C9D,UAAU,eACV2B,GAAG,YACHwC,mBAAiB,WACjBC,YAAY,sBAIpB,kBAAC,EAAD,CAAW3D,MAAM,WAAWD,QAAQ,cAChC,2BAAOqD,KAAK,QACRC,MAAO7D,KAAK8C,MAAMf,MAClB+B,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEjC,MAAOgC,EAAEE,OAAOJ,SAC/C9D,UAAU,eACV2B,GAAG,aACHwC,mBAAiB,YACjBC,YAAY,oBAIpB,kBAAC,EAAD,CAAW3D,MAAM,WAAWD,QAAQ,cAChC,2BAAOqD,KAAK,WACRC,MAAO7D,KAAK8C,MAAMb,MAClB6B,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE/B,MAAO8B,EAAEE,OAAOJ,SAC/C9D,UAAU,eACV2B,GAAG,aACHyC,YAAY,cAGpB,kBAAC,EAAD,CAAW3D,MAAM,oBAAoBD,QAAQ,oBACzC,2BAAOqD,KAAK,WACRC,MAAO7D,KAAK8C,MAAMZ,eAClB4B,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE9B,eAAgB6B,EAAEE,OAAOJ,SACxD9D,UAAU,eACV2B,GAAG,mBACHyC,YAAY,cAGpB,4BACIC,QAASpE,KAAK+C,UACdhD,UAAU,mBACV,uBAAGA,UAAU,eAHjB,WAKA,4BACIqE,QAASpE,KAAK2D,SACd5D,UAAU,kBACV,uBAAGA,UAAU,gBAHjB,qB,GAnGEK,IAAMC,WAmHrBgE,cAAWxB,GC1HLyB,E,2GAEIC,EAAOC,GACxBC,aAAaC,QAAQH,EAAOI,KAAKC,UAAUJ,M,gCAG9BD,GACb,OAAOI,KAAKE,MAAMJ,aAAaK,QAAQP,M,iCAGzBA,GACdE,aAAaM,WAAWR,O,KCPXS,E,oHAGb,IAAMrD,EAAU2C,EAAoBW,UANd,mBAQtB,OAAOtD,GAAWA,EAAQD,K,kDAI1B4C,EAAoBS,WAZE,qB,4BAebpD,GACT,OAAO2C,EAAoBY,cAhBL,kBAgBmCvD,K,gDAKzD,OAAO2C,EAAoBW,UArBL,uB,KCEjBE,EAAc/E,IAAMgF,gBAEpBC,EAAeF,EAAYG,SAElCC,EAAeJ,EAAYK,SAoClBC,E,4MAhCX3C,MAAQ,CACJ4C,mBAAoB,KACpBC,eAAe,G,EAGnBC,cAAgB,SAACjE,GACbqD,EAAYa,MAAMlE,GAClB,EAAKqC,SAAS,CAAE2B,eAAe,EAAMD,mBAAoB/D,K,EAI7DmE,eAAiB,WACbd,EAAYe,4BACZ,EAAK/B,SAAS,CAAE2B,eAAe,EAAOD,mBAAoB,OAC1DM,QAAQC,IAAI,EAAKnD,Q,uDAGjB,IAAMoD,EAAW,CACbR,mBAAoB1F,KAAK8C,MAAM4C,mBAC/BC,cAAe3F,KAAK8C,MAAM6C,cAC1BC,cAAe5F,KAAK4F,cACpBE,eAAgB9F,KAAK8F,gBAGzB,OACI,kBAACP,EAAD,CAAc1B,MAAOqC,GAChBlG,KAAKC,MAAME,c,GA5BOC,IAAMC,WCFnC8F,E,kDAQF,aAAe,IAAD,8BACV,gBANJrD,MAAQ,CACJf,MAAO,GACPE,MAAO,IAGG,EAKdmE,OAAS,WACL,EAAKpD,QAAQqD,WAAW,CACpBtE,MAAO,EAAKe,MAAMf,MAClBE,MAAO,EAAKa,MAAMb,QACnBqB,MAAK,SAAAC,GACJ,EAAK+C,QAAQV,cAAcrC,EAASG,MACpC,EAAKzD,MAAMuD,QAAQ1B,KAAK,SACxBkE,QAAQC,IAAI,EAAKK,QAAQX,kBAC1BlC,OAAM,SAAA8C,GACL9D,EAAa8D,EAAKhD,SAASG,UAdrB,EAkBd8C,iBAAmB,WACf,EAAKvG,MAAMuD,QAAQ1B,KAAK,uBAjBxB,EAAKkB,QAAU,IAAIxB,EAFT,E,qDAwBJ,IAAD,OACL,OACI,yBAAKzB,UAAU,OACX,yBAAKA,UAAU,WAAW0G,MAAO,CAAEC,SAAU,WAAYC,KAAM,UAC3D,yBAAK5G,UAAU,mBACX,kBAAC,EAAD,CAAMG,MAAM,SACR,yBAAKH,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,kCACI,kBAAC,EAAD,CAAWS,MAAM,WAAWD,QAAQ,qBAChC,2BAAOqD,KAAK,QACRC,MAAO7D,KAAK8C,MAAMf,MAClB+B,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEjC,MAAOgC,EAAEE,OAAOJ,SAC/C9D,UAAU,eACV2B,GAAG,oBACHwC,mBAAiB,YACjBC,YAAY,oBAGpB,kBAAC,EAAD,CAAW3D,MAAM,WAAWD,QAAQ,qBAChC,2BAAOqD,KAAK,WACRC,MAAO7D,KAAK8C,MAAMb,MAClB6B,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE/B,MAAO8B,EAAEE,OAAOJ,SAC/C9D,UAAU,eACV2B,GAAG,oBACHyC,YAAY,cAEpB,4BACIC,QAASpE,KAAKoG,OACdrG,UAAU,mBACV,uBAAGA,UAAU,kBAHjB,WAKA,4BACIqE,QAASpE,KAAKwG,iBACdzG,UAAU,mBACV,uBAAGA,UAAU,oBAHjB,4B,GAjExBK,IAAMC,WAmF1B8F,EAAMS,YAAczB,EAELd,kBAAW8B,G,QCxFpBU,E,kDAMF,aAAe,IAAD,8BACV,gBALJ/D,MAAQ,CACJgE,MAAO,GAKP,EAAKC,eAAiB,IAAIvF,EAFhB,E,gEAMO,IAAD,OAEVwF,EAAgB1C,EAAoBW,UAAU,mBAEpDjF,KAAK+G,eACAE,uBAAuBD,EAActF,IACrC4B,MAAK,SAAAC,GACF,EAAKS,SAAS,CAAE8C,MAAOvD,EAASG,UACjCD,OAAM,SAAAP,GACL8C,QAAQ9C,MAAMA,EAAMK,e,+BAM5B,OACI,yBAAKxD,UAAU,aACX,wBAAIA,UAAU,aAAd,cACA,uBAAGA,UAAU,QAAb,yCACA,uBAAGA,UAAU,QAAb,4CAAwDC,KAAK8C,MAAMgE,OACnE,wBAAI/G,UAAU,SACd,0IACA,uBAAGA,UAAU,QACT,uBAAGA,UAAU,yBAAyBmH,KAAK,sBAAsBC,KAAK,UAAS,uBAAGpH,UAAU,gBAA5F,0BACA,uBAAGA,UAAU,wBAAwBmH,KAAK,yBAAyBC,KAAK,UAAS,uBAAGpH,UAAU,gBAA9F,mC,GApCDK,IAAMC,WA0CzBwG,EAAKD,YAAczB,EACJ0B,QC7CA,WAAC5G,GAEZ,IAAM2C,EAAU3C,EAAMmH,MAAMC,KAAI,SAACC,EAAQC,GAErC,OACI,4BAAQC,IAAKD,EAAO1D,MAAOyD,EAAOzD,OAAlC,IAA2CyD,EAAO9G,UAI1D,OACI,2BAAYP,EACP2C,I,iBCXE,WAAA3C,GAEX,IAAMwH,EAAOxH,EAAMyH,YAAYL,KAAI,SAAAM,GAC/B,OACI,wBAAIH,IAAKG,EAAWjG,IAChB,4BAAKiG,EAAWC,WAChB,4BAAKC,IAAkBC,OAAOH,EAAWnD,MAAO,CAAEuD,OAAQ,WAC1D,4BAAKJ,EAAWK,gBAChB,4BAAKL,EAAWM,KAChB,4BAAKN,EAAWO,kBAChB,4BACI,4BACInI,UAAU,kBACVG,MAAM,WACNiI,SAA0C,aAAhCR,EAAWO,iBACrB9D,QAAS,SAAAL,GAAC,OAAI9D,EAAMmI,cAAcT,EAAY,cAC9C/D,KAAK,UACL,uBAAG7D,UAAU,iBAGjB,4BACIA,UAAU,kBACVG,MAAM,WACNiI,SAA0C,aAAhCR,EAAWO,iBACrB9D,QAAS,SAAAL,GAAC,OAAI9D,EAAMmI,cAAcT,EAAY,cAC9C/D,KAAK,UACL,uBAAG7D,UAAU,iBAGjB,4BACI6D,KAAK,SACL1D,MAAM,SACNH,UAAU,kBACVqE,QAAS,SAAAL,GAAC,OAAI9D,EAAMoI,aAAaV,EAAWjG,MAC5C,uBAAG3B,UAAU,kBAGjB,4BACI6D,KAAK,SACL1D,MAAM,UACNH,UAAU,iBACVqE,QAAS,SAAAL,GAAC,OAAI9D,EAAMqI,aAAaX,KACjC,uBAAG5H,UAAU,sBAMjC,OACI,2BAAOA,UAAU,qBACb,+BACI,4BACI,wBAAIwI,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBAGR,+BACKd,KC6CFe,E,kDAxGX,aAAe,uCACL,qB,8DAIN,MAAO,CACH,CAAEhI,MAAO,YAAaqD,MAAO,IAC7B,CAAErD,MAAO,UAAWqD,MAAO,GAC3B,CAAErD,MAAO,YAAaqD,MAAO,GAC7B,CAAErD,MAAO,WAASqD,MAAO,GACzB,CAAErD,MAAO,QAASqD,MAAO,GACzB,CAAErD,MAAO,OAAQqD,MAAO,GACxB,CAAErD,MAAO,QAASqD,MAAO,GACzB,CAAErD,MAAO,QAASqD,MAAO,GACzB,CAAErD,MAAO,SAAUqD,MAAO,GAC1B,CAAErD,MAAO,WAAYqD,MAAO,GAC5B,CAAErD,MAAO,UAAWqD,MAAO,IAC3B,CAAErD,MAAO,WAAYqD,MAAO,IAC5B,CAAErD,MAAO,WAAYqD,MAAO,O,mCAKhC,MAAO,CACH,CAAErD,MAAO,YAAaqD,MAAO,IAC7B,CAAErD,MAAO,UAAWqD,MAAO,WAC3B,CAAErD,MAAO,UAAWqD,MAAO,c,gCAIzB4E,GAEN,IAAIC,EAAM,eAAWD,EAAOE,KAmB5B,OAlBIF,EAAOR,MACPS,EAAM,UAAMA,EAAN,gBAAoBD,EAAOR,MAEjCQ,EAAOlG,OACPmG,EAAM,UAAMA,EAAN,iBAAqBD,EAAOlG,OAElCkG,EAAOG,SACPF,EAAM,UAAMA,EAAN,iBAAqBD,EAAOG,SAGlCH,EAAO9G,UACP+G,EAAM,UAAMA,EAAN,oBAAwBD,EAAO9G,UAGrC8G,EAAOb,YACPc,EAAM,UAAMA,EAAN,sBAA0BD,EAAOb,YAGpC5H,KAAKqB,IAAIqH,K,8BAGZhH,GACJ,OAAO1B,KAAKoB,OAAL,WAAgBM,M,6BAGpBiG,GACH,OAAO3H,KAAKkB,KAAK,GAAIyG,K,gCAGfA,GACN,OAAO3H,KAAKmB,IAAL,UAAYwG,EAAWjG,IAAMiG,K,mCAG3BjG,GACT,OAAO1B,KAAKqB,IAAL,WAAaK,M,oCAGVA,EAAIkH,GACd,OAAO5I,KAAKmB,IAAL,2BAA6BO,GAAM,CAAEkH,a,8BAGxCjB,GACJ,IAAM/F,EAAQ,GAuBd,GArBK+F,EAAWgB,KACZ/G,EAAME,KAAK,gCAGV6F,EAAWM,KACZrG,EAAME,KAAK,mCAGV6F,EAAWC,WACZhG,EAAME,KAAK,4CAGV6F,EAAWnD,OACZ5C,EAAME,KAAK,kCAGV6F,EAAWK,gBACZpG,EAAME,KAAK,iCAIXF,GAASA,EAAMO,OAAS,EACxB,MAAM,IAAIb,EAAcM,O,GApGJf,G,gBCW1BgI,E,kDAcF,aAAe,IAAD,8BACV,gBAbJ/F,MAAQ,CACJ6F,IAAK,GACLV,IAAK,GACLD,eAAgB,GAChBE,iBAAkB,GAClBY,mBAAmB,EACnBC,kBAAmB,GACnBnB,UAAW,GACXF,YAAa,IAIH,EAKdsB,OAAS,WACL,IAAK,EAAKlG,MAAM6F,IAEZ,OADAM,EAAwB,0CACjB,EAEX,IAAMjC,EAAgB1C,EAAoBW,UAAU,mBAC9CwD,EAAS,CACXE,IAAK,EAAK7F,MAAM6F,IAChBV,IAAK,EAAKnF,MAAMmF,IAChB1F,KAAM,EAAKO,MAAMkF,eACjBrG,QAASqF,EAActF,GACvBkG,UAAW,EAAK9E,MAAM8E,WAG1B,EAAK5E,QACAkG,UAAUT,GACVnF,MAAK,SAAA6F,GACEA,EAASzF,KAAKvB,OAAS,GACvB8G,EAAwB,+DAE5B,EAAKjF,SAAS,CAAE0D,YAAayB,EAASzF,UAEvCD,OAAM,SAAAP,GACL+F,EAAsB,8CA5BpB,EAgCdG,OAAS,SAAC1H,GACN,EAAKzB,MAAMuD,QAAQ1B,KAAnB,gCAAiDJ,KAjCvC,EAoCd0G,cAAgB,SAACT,EAAYiB,GACzB,EAAK5F,QACAoF,cAAcT,EAAWjG,GAAIkH,GAC7BtF,MAAK,SAAAC,GACF,IAAMmE,EAAc,EAAK5E,MAAM4E,YACzBH,EAAQG,EAAY2B,QAAQ1B,IACnB,IAAXJ,IACAI,EAAU,iBAAuBiB,EACjCjB,EAAWJ,GAASI,EACpB,EAAK3D,SAAS,CAAE0D,iBAEpBuB,EAAyB,qCAC1BxF,OAAM,SAAAP,GACL+F,EAAsB,4CAAuC/F,EAAMK,cAjDjE,EAqDd+F,iBAAmB,SAAC3B,GAChB,EAAK3D,SAAS,CAAE8E,mBAAmB,EAAMC,kBAAmBpB,KAtDlD,EAyDd4B,gBAAkB,WACd,EAAKvF,SAAS,CAAE8E,mBAAmB,EAAOC,kBAAmB,MA1DnD,EA6DdS,QAAU,WACN,EAAKxG,QACA5B,OAAO,EAAK0B,MAAMiG,kBAAkBrH,IACpC4B,MAAK,SAAAC,GACF,IAAMmE,EAAc,EAAK5E,MAAM4E,YACzBH,EAAQG,EAAY2B,QAAQ,EAAKvG,MAAMiG,mBAC7CrB,EAAY+B,OAAOlC,EAAO,GAC1B,EAAKvD,SAAS,CAAE0D,YAAaA,EAAaoB,mBAAmB,IAC7DG,EAAyB,4BAC1BxF,OAAM,SAAAP,GACL+F,EAAsB,wDArE9B,EAAKjG,QAAU,IAAIwF,EAFT,E,qDA0EJ,IAAD,OACCpB,EAAQpH,KAAKgD,QAAQ0G,kBACrBC,EAAkB3J,KAAKgD,QAAQ4G,aAC/BC,EACF,6BACI,kBAAC,SAAD,CAAQrJ,MAAM,MAAMsJ,KAAK,cAAc1F,QAASpE,KAAKwJ,UACrD,kBAAC,SAAD,CAAQhJ,MAAM,WAAWsJ,KAAK,cAAc1F,QAASpE,KAAKuJ,mBAIlE,OACI,kBAAC,EAAD,CAAMrJ,MAAM,yBACR,yBAAKH,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAWQ,QAAQ,WAAWC,MAAM,UAChC,2BACIoD,KAAK,OACL7D,UAAU,eACV2B,GAAG,WACHwC,mBAAiB,UACjBC,YAAY,eACZL,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE2E,IAAK5E,EAAEE,OAAOJ,YAIrD,kBAAC,EAAD,CAAWtD,QAAQ,WAAWC,MAAM,SAChC,kBAAC,EAAD,CACIkB,GAAG,WACHmC,MAAO7D,KAAK8C,MAAMmF,IAClBnE,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEiE,IAAKlE,EAAEE,OAAOJ,SAC7C9D,UAAU,eAAeqH,MAAOA,KAKxC,kBAAC,EAAD,CAAW7G,QAAQ,iBAAiBC,MAAM,qBACtC,2BACIoD,KAAK,OACL7D,UAAU,eACV2B,GAAG,iBACHwC,mBAAiB,gBACjBC,YAAY,2BACZL,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE4D,UAAW7D,EAAEE,OAAOJ,YAK3D,kBAAC,EAAD,CAAWtD,QAAQ,sBAAsBC,MAAM,0BAC3C,kBAAC,EAAD,CACIkB,GAAG,sBACHmC,MAAO7D,KAAK8C,MAAMkF,eAClBlE,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEzB,KAAMwB,EAAEE,OAAOJ,SAC9C9D,UAAU,eACVqH,MAAOuC,KAIf,4BACIvF,QAASpE,KAAKgJ,OACdpF,KAAK,SACL7D,UAAU,mBACV,uBAAGA,UAAU,gBAAb,WAEJ,4BACIqE,QAAS,SAAAL,GAAC,OAAI,EAAK9D,MAAMuD,QAAQ1B,KAAK,0BACtC8B,KAAK,SACL7D,UAAU,mBACV,uBAAGA,UAAU,cAAb,kBAKhB,6BAEA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CACI2H,YAAa1H,KAAK8C,MAAM4E,YACxBY,aAActI,KAAKsJ,iBACnBjB,aAAcrI,KAAKoJ,OACnBhB,cAAepI,KAAKoI,mBAKpC,6BACI,kBAAC,SAAD,CACI2B,OAAO,wBACPC,QAAShK,KAAK8C,MAAMgG,kBACpBrC,MAAO,CAAEwD,MAAO,QAChBC,OAAO,EACPC,OAAQN,EACRO,OAAQ,kBAAM,EAAKpG,SAAS,CAAE8E,mBAAmB,MANrD,iG,GAhLc1I,IAAMC,WAkMzBgE,cAAWwE,G,gBCvMpBwB,E,kDAeF,aAAe,IAAD,8BACV,gBAdJvH,MAAQ,CACJpB,GAAI,KACJkG,UAAW,GACXK,IAAK,GACLU,IAAK,GACLnE,MAAO,EACPwD,eAAgB,GAChBE,iBAAkB,GAClBoC,UAAW,EACXC,aAAa,GAIH,EAkBdC,OAAS,WACL,IAAMxD,EAAgB1C,EAAoBW,UAAU,mBADzC,EAE4C,EAAKnC,MACtD6E,EAAa,CAAEC,UAHV,EAEHA,UACwBK,IAHrB,EAEQA,IACkBU,IAH1B,EAEaA,IACkBnE,MAH/B,EAEkBA,MACoBwD,eAHtC,EAEyBA,eAC6BsC,UAAWtD,EAActF,IAE1F,IACI,EAAKsB,QAAQC,QAAQ0E,GACvB,MAAOpB,GAGL,OAFkBA,EAAKhF,UACb4B,SAAQ,SAAAC,GAAS6F,EAAsB7F,OAC1C,EAIX,EAAKJ,QAAQK,OAAOsE,GACfrE,MAAK,SAAAC,GACF,EAAKtD,MAAMuD,QAAQ1B,KAAK,yBACxBmH,EAAyB,wCAC1BxF,OAAM,SAAAP,GACL+F,EAAsB,sCAAoC/F,EAAMK,SAASG,UArCvE,EAyCd+G,UAAY,WAAO,IAAD,EAC0E,EAAK3H,MACvF6E,EAAa,CAAEC,UAFP,EACNA,UACwBK,IAFlB,EACKA,IACkBU,IAFvB,EACUA,IACkBnE,MAF5B,EACeA,MACoBwD,eAFnC,EACsBA,eAC6BE,iBAFnD,EACsCA,iBAC+BoC,UAFrE,EACwDA,UACwB5I,GAFhF,EACmEA,IAEjF,EAAKsB,QAAQyH,UAAU9C,GAClBrE,MAAK,SAAAC,GACF,EAAKtD,MAAMuD,QAAQ1B,KAAK,yBACxBmH,EAAyB,6CAC1BxF,OAAM,SAAAP,GACL+F,EAAsB,yCAAuC/F,EAAMK,SAASG,UAjD1E,EAqDdgH,aAAe,SAACC,GACZ,IAAM9G,EAAQ8G,EAAO1G,OAAOJ,MACtB+G,EAAOD,EAAO1G,OAAO2G,KAC3B,EAAK5G,SAAL,eAAiB4G,EAAO/G,KAtDxB,EAAKb,QAAU,IAAIwF,EAFT,E,gEAKO,IAAD,OACVE,EAAS1I,KAAKC,MAAM+B,MAAM0G,OAC5BA,EAAOhH,IACP1B,KAAKgD,QAAQ6H,aAAanC,EAAOhH,IAC5B4B,MAAK,SAAAC,GACF,EAAKS,SAAL,eAAmBT,EAASG,KAA5B,CAAkC6G,aAAa,KAC/CvE,QAAQC,IAAI1C,EAASG,SACtBD,OAAM,SAAAP,GACL+F,EAAsB,wCAAsCP,EAAOhH,GAAIwB,EAAMK,SAASG,W,+BA+C5F,IAAD,OAECoH,EAAQ9K,KAAKgD,QAAQ4G,aACrBmB,EAAQ/K,KAAKgD,QAAQ0G,kBAC3B,OACI,kBAAC,EAAD,CAAMxJ,MAAOF,KAAK8C,MAAMyH,YAAc,kCAA8B,2BAChE,yBAAKxK,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAW2B,GAAG,iBAAiBlB,MAAM,sBACjC,2BACIkB,GAAG,iBACHkC,KAAK,OACLgH,KAAK,YACL7K,UAAU,eACV8D,MAAO7D,KAAK8C,MAAM8E,UAClB9D,SAAU9D,KAAK0K,kBAK/B,yBAAK3K,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAW2B,GAAG,WAAWlB,MAAM,SAC3B,2BACIkB,GAAG,WACHkC,KAAK,OACL7D,UAAU,eACV6K,KAAK,MACL/G,MAAO7D,KAAK8C,MAAM6F,IAClB7E,SAAU9D,KAAK0K,iBAI3B,yBAAK3K,UAAU,YAEX,kBAAC,EAAD,CAAW2B,GAAG,WAAWlB,MAAM,YAC3B,kBAAC,EAAD,CACIkB,GAAG,WACH0F,MAAO2D,EACPH,KAAK,MACL7K,UAAU,eACV8D,MAAO7D,KAAK8C,MAAMmF,IAClBnE,SAAU9D,KAAK0K,iBAM3B,yBAAK3K,UAAU,YACX,kBAAC,EAAD,CAAW2B,GAAG,aAAalB,MAAM,YAC7B,2BACIkB,GAAG,aACHkC,KAAK,OACLgH,KAAK,QACL7K,UAAU,eACV8D,MAAO7D,KAAK8C,MAAM0B,MAClBV,SAAU9D,KAAK0K,iBAI3B,yBAAK3K,UAAU,YACX,kBAAC,EAAD,CAAW2B,GAAG,YAAYlB,MAAM,WAC5B,kBAAC,EAAD,CACIkB,GAAG,YACH0F,MAAO0D,EACPF,KAAK,iBACL7K,UAAU,eACV8D,MAAO7D,KAAK8C,MAAMkF,eAClBlE,SAAU9D,KAAK0K,iBAI3B,yBAAK3K,UAAU,YACX,kBAAC,EAAD,CAAW2B,GAAG,cAAclB,MAAM,UAC9B,2BACIkB,GAAG,cACHkC,KAAK,OACL7D,UAAU,eACV6K,KAAK,mBACLzC,UAAQ,EACRtE,MAAO7D,KAAK8C,MAAMoF,iBAClBpE,SAAU9D,KAAK0K,kBAK/B,yBAAK3K,UAAU,OACX,yBAAKA,UAAU,YACVC,KAAK8C,MAAMyH,YACR,4BACInG,QAASpE,KAAKyK,UACd1K,UAAU,mBACV,uBAAGA,UAAU,kBAHjB,cAMI,4BACIqE,QAASpE,KAAKwK,OACdzK,UAAU,mBACV,uBAAGA,UAAU,eAHjB,WASR,4BACIqE,QAAS,SAAAL,GAAC,OAAI,EAAK9D,MAAMuD,QAAQ1B,KAAK,0BACtC/B,UAAU,kBAAiB,uBAAGA,UAAU,mBAF5C,oB,GAnLUK,IAAMC,WA4LzBgE,cAAWgG,GC5L1B,SAASW,EAAT,GAAoF,IAA9C3K,EAA6C,EAAxD4K,UAAsBC,EAAkC,EAAlCA,qBAAyBjL,EAAS,oDAC/E,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAkBkL,OAAQ,SAACC,GACvB,OAAIF,EAEI,kBAAC7K,EAAa+K,GAId,kBAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,SAAUxI,MAAO,CAAEyI,KAAMH,EAAeI,iBAQtF,SAASC,EAAMxL,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyL,KAAK,SAAST,UAAW9E,IAChC,kBAAC,IAAD,CAAOuF,KAAK,qBAAqBT,UAAWpI,IAE5C,kBAACmI,EAAD,CAAiBE,qBAAsBjL,EAAMiL,qBAAsBQ,KAAK,QAAQT,UAAWpE,IAC3F,kBAACmE,EAAD,CAAiBE,qBAAsBjL,EAAMiL,qBAAsBQ,KAAK,wBAAwBT,UAAWU,IAC3G,kBAACX,EAAD,CAAiBE,qBAAsBjL,EAAMiL,qBAAsBQ,KAAK,6BAA6BT,UAAWW,MAMjH,yBACX,kBAACvG,EAAD,MACK,SAACiB,GAAD,OAAc,kBAACmF,EAAD,CAAOP,qBAAsB5E,EAAQX,oBCvB7CkG,OAlBf,YAA2C,IAArBV,EAAoB,EAApBA,OAAWlL,EAAS,0BACtC,QAAIkL,GAEI,wBAAIpL,UAAU,YACV,uBACIA,UAAU,WACVmH,KAAMjH,EAAMiH,KACZ9C,QAASnE,EAAMmE,SACjBnE,EAAMO,SCNxB,SAASsL,GAAO7L,GACd,OACE,yBAAKF,UAAU,4DACb,yBAAKA,UAAU,aACb,uBAAGmH,KAAK,SAASnH,UAAU,gBAA3B,sBACA,4BAAQA,UAAU,iBAAiB6D,KAAK,SAASmI,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBACxK,0BAAMpM,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B2B,GAAG,oBAC3C,wBAAI3B,UAAU,cACZ,kBAAC,GAAD,CAAYoL,OAAQlL,EAAMiL,qBAAsBhE,KAAK,SAAS1G,MAAM,SACpE,kBAAC,GAAD,CAAY2K,OAAQlL,EAAMiL,qBAAsBhE,KAAK,sBAAsB1G,MAAM,gBACjF,kBAAC,GAAD,CAAY2K,OAAQlL,EAAMiL,qBAAsBhE,KAAK,yBAAyB1G,MAAM,mBACpF,kBAAC,GAAD,CAAY2K,OAAQlL,EAAMiL,qBAAsB9G,QAASnE,EAAMmM,SAAUlF,KAAK,UAAU1G,MAAM,aAS3F,yBACb,kBAAC6E,EAAD,MACG,SAACiB,GAAD,OAAc,kBAACwF,GAAD,CAAQZ,qBAAsB5E,EAAQX,cAAeyG,SAAU9F,EAAQR,qBCC3EuG,I,iNAZX,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,yBAAKtM,UAAU,aACb,kBAAC,GAAD,Y,GAPQK,IAAMC,YCVxBiM,IAASnB,OAAO,kBAAC,GAAD,MAAOoB,SAASC,eAAe,W","file":"static/js/main.f69530bb.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"card mb-3\">\n                <h3 className=\"card-header\">{this.props.title}</h3>\n                <div className=\"card-body\">\n                    {this.props.children}\n                </div>\n               \n            </div>\n        )\n    }\n}\n\nexport default Card","import React from 'react'\n\n\nfunction FormGroup(props){\n    return(\n        <div className=\"form-group\">\n        <label htmlFor={props.htmlFor}>{props.label}</label>\n        {props.children}\n      </div>\n    )\n}\n\nexport default FormGroup;","import axios from 'axios'\n\nconst httpClient = axios.create({\n  baseURL: 'https://api-wolf-bills.herokuapp.com'\n})\n\nclass ApiService {\n\n  constructor(apiurl) {\n    this.apiurl = apiurl;\n  }\n\n  post(url, objeto) {\n    const requestUrl = `${this.apiurl}${url}`\n    return httpClient.post(requestUrl, objeto)\n  }\n\n  put(url, objeto) {\n    const requestUrl = `${this.apiurl}${url}`\n    return httpClient.put(requestUrl, objeto)\n  }\n\n  delete(url) {\n    const requestUrl = `${this.apiurl}${url}`\n    return httpClient.delete(requestUrl)\n  }\n\n  get(url) {\n    const requestUrl = `${this.apiurl}${url}`\n    return httpClient.get(requestUrl)\n  }\n}\nexport default ApiService","function ErroValidacao(mensagens) {\n    this.mensagens = mensagens;\n}\n\nexport default ErroValidacao;","import ApiService from '../apiservice'\nimport ErroValidacao from '../exceptions/ErroValidacao'\nclass UsuarioService extends ApiService {\n    constructor() {\n        super('/api/usuarios')\n    }\n\n    autenticar(credenciais) {\n        return this.post('/autenticar', credenciais)\n    }\n\n    obterSaldoPorIdUsuario(id) {\n        return this.get(`/saldo/${id}`)\n    }\n\n    salvar(usuario) {\n        return this.post('/', usuario)\n    }\n\n    validar(usuario) {\n        const erros = []\n\n        if (!usuario.nome) {\n            erros.push('O campo nome é obrigatório')\n        }\n\n        if (!usuario.email) {\n            erros.push('O campo email é obrigatório')\n        } else if (!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n            erros.push('O email informado não é válido')\n        }\n\n        if (!usuario.senha || !usuario.senhaRepeticao) {\n            erros.push('Os campos de senha são obrigatórios')\n        } else if (usuario.senha !== usuario.senhaRepeticao) {\n            erros.push('As senhas não conferem')\n        }\n\n        if (erros && erros.length > 0) {\n            throw new ErroValidacao(erros)\n        }\n    }\n\n}\nexport default UsuarioService;","import toastr from 'toastr'\ntoastr.options = {\n    \"closeButton\": true,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-right\",\n    \"preventDuplicates\": false,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n}\n\nexport function mostrarMensagem(titulo, mensagem, tipo) {\n    toastr[tipo](mensagem, titulo)\n}\n\nexport function mensagemErro(mensagem) {\n    mostrarMensagem('Erro', mensagem, 'error')\n}\n\nexport function mensagemSucesso(mensagem) {\n    mostrarMensagem('Sucesso', mensagem, 'success')\n}\n\nexport function mensagemAlerta(mensagem) {\n    mostrarMensagem('Alerta', mensagem, 'warning')\n}","import React from 'react';\nimport Card from '../components/card'\nimport FormGroup from '../components/form-group'\nimport { withRouter } from 'react-router-dom'\nimport UsuarioService from '../app/services/usuarioService'\nimport { mensagemErro, mensagemSucesso } from '../components/toastr'\n\nclass CadastroUsuario extends React.Component {\n\n    state = {\n        nome: '',\n        email: '',\n        senha: '',\n        senhaRepeticao: ''\n    }\n\n    constructor() {\n        super();\n        this.service = new UsuarioService();\n    }\n\n    cadastrar = () => {\n\n        const { nome, email, senha, senhaRepeticao } = this.state\n        const usuario = { nome, email, senha, senhaRepeticao }\n\n        try {\n            this.service.validar(usuario)\n        } catch (error) {\n            const msgs = error.mensagens\n            msgs.forEach(msg => {\n                mensagemErro(msg)\n            })\n            return false;\n        }\n\n        this.service\n            .salvar(usuario)\n            .then(response => {\n                mensagemSucesso('Usuário cadastrado com sucesso! faça o login para acessar o sistema.')\n                this.props.history.push('/login')\n            }).catch(error => {\n                mensagemErro(error.response.data)\n            })\n\n\n    }\n\n\n\n    cancelar = () => {\n        this.props.history.push('/login')\n    }\n\n    render() {\n        return (\n\n            <Card title=\"Cadastro de Usuários\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"bs-component\">\n                            <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\n                                <input type=\"text\"\n                                    value={this.state.nome}\n                                    onChange={e => this.setState({ nome: e.target.value })}\n                                    className=\"form-control\"\n                                    id=\"inputNome\"\n                                    aria-describedby=\"nameHelp\"\n                                    placeholder=\"Informe seu nome\"\n                                />\n                            </FormGroup>\n\n                            <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\n                                <input type=\"email\"\n                                    value={this.state.email}\n                                    onChange={e => this.setState({ email: e.target.value })}\n                                    className=\"form-control\"\n                                    id=\"inputEmail\"\n                                    aria-describedby=\"emailHelp\"\n                                    placeholder=\"Digite o Email\"\n                                />\n                            </FormGroup>\n\n                            <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\n                                <input type=\"password\"\n                                    value={this.state.senha}\n                                    onChange={e => this.setState({ senha: e.target.value })}\n                                    className=\"form-control\"\n                                    id=\"inputSenha\"\n                                    placeholder=\"password\" />\n                            </FormGroup>\n\n                            <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\n                                <input type=\"password\"\n                                    value={this.state.senhaRepeticao}\n                                    onChange={e => this.setState({ senhaRepeticao: e.target.value })}\n                                    className=\"form-control\"\n                                    id=\"inputRepitaSenha\"\n                                    placeholder=\"password\" />\n                            </FormGroup>\n\n                            <button\n                                onClick={this.cadastrar}\n                                className=\"btn btn-success\">\n                                <i className=\"pi pi-save\"></i> Salvar\n                            </button>\n                            <button\n                                onClick={this.cancelar}\n                                className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i> cancelar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n\n\n\n        )\n    }\n}\n\nexport default withRouter(CadastroUsuario)","export default class LocalStorageService {\n\n    static adicionarItem(chave, valor) {\n        localStorage.setItem(chave, JSON.stringify(valor));\n    }\n\n    static obterItem(chave) {\n        return JSON.parse(localStorage.getItem(chave));\n    }\n\n    static removeItem(chave) {\n        localStorage.removeItem(chave);\n    }\n}","import LocalStorageService from \"./localStorageService\"\nexport const USUARIO_LOGADO = '_usuario_logado'\n\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado() {\n        const usuario = LocalStorageService.obterItem(USUARIO_LOGADO)\n\n        return usuario && usuario.id;\n    }\n\n    static removerUsuarioAutenticado() {\n        LocalStorageService.removeItem(USUARIO_LOGADO)\n    }\n\n    static logar(usuario) {\n        return LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario)\n\n    }\n\n    static ObterUsuarioAutenticado() {\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n}","import React from 'react'\nimport AuthService from '../app/services/authService';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthConsumer = AuthContext.Consumer;\n\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component {\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false\n    }\n\n    iniciarSessao = (usuario) => {\n        AuthService.logar(usuario);\n        this.setState({ isAutenticado: true, usuarioAutenticado: usuario })\n\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState({ isAutenticado: false, usuarioAutenticado: null })\n        console.log(this.state)\n    }\n    render() {\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n\n        }\n        return (\n            <AuthProvider value={contexto}>\n                {this.props.children}\n            </AuthProvider>\n        )\n    }\n}\n\nexport default ProvedorAutenticacao;","import React from 'react'\nimport Card from '../components/card'\nimport FormGroup from '../components/form-group'\nimport { withRouter } from 'react-router-dom'\nimport UsuarioService from '../app/services/usuarioService'\nimport { mensagemErro } from '../components/toastr'\nimport { AuthContext } from '../main/ProvedorAutenticacao'\nclass Login extends React.Component {\n\n\n    state = {\n        email: '',\n        senha: ''\n    }\n\n    constructor() {\n        super();\n        this.service = new UsuarioService();\n    }\n\n    entrar = () => {\n        this.service.autenticar({\n            email: this.state.email,\n            senha: this.state.senha\n        }).then(response => {\n            this.context.iniciarSessao(response.data)\n            this.props.history.push('/home')\n            console.log(this.context.isAutenticado)\n        }).catch(erro => {\n            mensagemErro(erro.response.data)\n        })\n    }\n\n    prepareCadastrar = () => {\n        this.props.history.push('/cadastro-usuarios')\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\" style={{ position: 'relative', left: '300px' }}>\n                    <div className=\"bs-docs-section\">\n                        <Card title=\"Login\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"bs-component\">\n                                        <fieldset>\n                                            <FormGroup label=\"Email: *\" htmlFor=\"exampleInputEmail\">\n                                                <input type=\"email\"\n                                                    value={this.state.email}\n                                                    onChange={e => this.setState({ email: e.target.value })}\n                                                    className=\"form-control\"\n                                                    id=\"exampleInputEmail\"\n                                                    aria-describedby=\"emailHelp\"\n                                                    placeholder=\"Digite o Email\"\n                                                />\n                                            </FormGroup>\n                                            <FormGroup label=\"Senha: *\" htmlFor=\"exampleInputSenha\">\n                                                <input type=\"password\"\n                                                    value={this.state.senha}\n                                                    onChange={e => this.setState({ senha: e.target.value })}\n                                                    className=\"form-control\"\n                                                    id=\"exampleInputSenha\"\n                                                    placeholder=\"password\" />\n                                            </FormGroup>\n                                            <button\n                                                onClick={this.entrar}\n                                                className=\"btn btn-success\">\n                                                <i className=\"pi pi-sign-in\"></i> Entrar\n                                                </button>\n                                            <button\n                                                onClick={this.prepareCadastrar}\n                                                className=\"btn btn-primary\">\n                                                <i className=\"pi pi-user-plus\"></i> Cadastra-se\n                                                 </button>\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nLogin.contextType = AuthContext\n\nexport default withRouter(Login)","import React from 'react'\nimport UsuarioService from '../app/services/usuarioService'\nimport LocalStorageService from '../app/services/localStorageService'\nimport { AuthContext } from '../main/ProvedorAutenticacao'\nclass Home extends React.Component {\n\n    state = {\n        saldo: 0\n    }\n\n    constructor() {\n        super();\n        this.usuarioService = new UsuarioService();\n    }\n\n\n    componentDidMount() {\n        // const usuarioLogado = this.context.usuarioAutenticado;\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado')\n\n        this.usuarioService\n            .obterSaldoPorIdUsuario(usuarioLogado.id)\n            .then(response => {\n                this.setState({ saldo: response.data })\n            }).catch(error => {\n                console.error(error.response)\n            });\n    }\n\n\n    render() {\n        return (\n            <div className=\"jumbotron\">\n                <h1 className=\"display-3\">Bem vindo!</h1>\n                <p className=\"lead\">Esse é seu sistema de finanças.</p>\n                <p className=\"lead\">Seu saldo para o mês atual é de R$ {this.state.saldo}</p>\n                <hr className=\"my-4\" />\n                <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\n                <p className=\"lead\">\n                    <a className=\"btn btn-primary btn-lg\" href=\"#/cadastro-usuarios\" role=\"button\"><i className=\"fa fa-users\"></i>  Cadastrar Usuário</a>\n                    <a className=\"btn btn-danger btn-lg\" href=\"#/cadastro-lancamentos\" role=\"button\"><i className=\"fa fa-users\"></i>  Cadastrar Lançamento</a>\n                </p>\n            </div>\n        )\n    }\n}\nHome.contextType = AuthContext\nexport default Home","import React from 'react'\n\nexport default (props) => {\n\n    const options = props.lista.map((option, index) => {\n\n        return (\n            <option key={index} value={option.value}> {option.label}</option>\n        )\n    })\n\n    return (\n        <select {...props}>\n            {options}\n        </select>\n    )\n}","import React from 'react';\nimport currencyFormatter from 'currency-formatter'\nexport default props => {\n\n    const rows = props.lancamentos.map(lancamento => {\n        return (\n            <tr key={lancamento.id}>\n                <td>{lancamento.descricao}</td>\n                <td>{currencyFormatter.format(lancamento.valor, { locale: 'pt-BR' })}</td>\n                <td>{lancamento.tipoLancamento}</td>\n                <td>{lancamento.mes}</td>\n                <td>{lancamento.statusLancamento}</td>\n                <td>\n                    <button\n                        className=\"btn btn-success\"\n                        title=\"Efetivar\"\n                        disabled={lancamento.statusLancamento !== 'PENDENTE'}\n                        onClick={e => props.alterarStatus(lancamento, 'EFETIVADO')}\n                        type=\"button\">\n                        <i className=\"pi pi-check\"></i>\n\n                    </button>\n                    <button\n                        className=\"btn btn-warning\"\n                        title=\"Cancelar\"\n                        disabled={lancamento.statusLancamento !== 'PENDENTE'}\n                        onClick={e => props.alterarStatus(lancamento, 'CANCELADO')}\n                        type=\"button\">\n                        <i className=\"pi pi-times\"></i>\n                    </button>\n\n                    <button\n                        type=\"button\"\n                        title=\"Editar\"\n                        className=\"btn btn-primary\"\n                        onClick={e => props.editarAction(lancamento.id)}>\n                        <i className=\"pi pi-pencil\"></i>\n                    </button>\n\n                    <button\n                        type=\"button\"\n                        title=\"Deletar\"\n                        className=\"btn btn-danger\"\n                        onClick={e => props.deleteAction(lancamento)}>\n                        <i className=\"pi pi-trash\"></i>\n                    </button>\n                </td>\n            </tr>\n        )\n    })\n    return (\n        <table className=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Descrição</th>\n                    <th scope=\"col\">Valor</th>\n                    <th scope=\"col\">Tipo</th>\n                    <th scope=\"col\">Mês</th>\n                    <th scope=\"col\">Situação</th>\n                    <th scope=\"col\">Ações</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    )\n}","import ApiService from '../apiservice'\nimport ErroValidacao from '../exceptions/ErroValidacao'\n\nclass LancamentoService extends ApiService {\n    constructor() {\n        super('/api/lancamentos/')\n    }\n\n    obterListaMeses() {\n        return [\n            { label: 'Selecione', value: '' },\n            { label: 'Janeiro', value: 1 },\n            { label: 'Fevereiro', value: 2 },\n            { label: 'Março', value: 3 },\n            { label: 'Abril', value: 4 },\n            { label: 'Maio', value: 5 },\n            { label: 'Junho', value: 6 },\n            { label: 'Julho', value: 7 },\n            { label: 'Agosto', value: 8 },\n            { label: 'Setembro', value: 9 },\n            { label: 'Outubro', value: 10 },\n            { label: 'Novembro', value: 11 },\n            { label: 'Dezembro', value: 12 }\n        ]\n    }\n\n    obterTipos() {\n        return [\n            { label: 'Selecione', value: '' },\n            { label: 'Despesa', value: 'DESPESA' },\n            { label: 'Receita', value: 'RECEITA' },\n        ]\n    }\n\n    consultar(filtro) {\n\n        let params = `?ano=${filtro.ano}`\n        if (filtro.mes) {\n            params = `${params}&mes=${filtro.mes}`\n        }\n        if (filtro.tipo) {\n            params = `${params}&tipo=${filtro.tipo}`\n        }\n        if (filtro.status) {\n            params = `${params}&tipo=${filtro.status}`\n        }\n\n        if (filtro.usuario) {\n            params = `${params}&usuario=${filtro.usuario}`\n        }\n\n        if (filtro.descricao) {\n            params = `${params}&descricao=${filtro.descricao}`\n        }\n\n        return this.get(params)\n    }\n\n    deletar(id) {\n        return this.delete(`/${id}`)\n    }\n\n    salvar(lancamento) {\n        return this.post('', lancamento)\n    }\n\n    atualizar(lancamento) {\n        return this.put(`${lancamento.id}`, lancamento)\n    }\n\n    buscarPeloId(id) {\n        return this.get(`/${id}`)\n    }\n\n    alterarStatus(id, status) {\n        return this.put(`atualizar-status/${id}`, { status })\n    }\n\n    validar(lancamento) {\n        const erros = [];\n\n        if (!lancamento.ano) {\n            erros.push('Informe o Ano do Lancamento.')\n        }\n\n        if (!lancamento.mes) {\n            erros.push('Informe o Mês do Lancamento.')\n        }\n\n        if (!lancamento.descricao) {\n            erros.push('Informe a Descrição do Lancamento.')\n        }\n\n        if (!lancamento.valor) {\n            erros.push('Informe o Valor do Lancamento.')\n        }\n\n        if (!lancamento.tipoLancamento) {\n            erros.push('Informe o Tipo do Lancamento.')\n        }\n\n\n        if (erros && erros.length > 0) {\n            throw new ErroValidacao(erros);\n        }\n    }\n\n}\nexport default LancamentoService;","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from '../../components/card';\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from '../../components/select-menu'\nimport LancamentosTable from './lancamentosTable'\nimport LancamentoService from '../../app/services/lancamentoService'\nimport LocalStorageService from '../../app/services/localStorageService'\nimport * as messages from '../../components/toastr'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\n\n\n\nclass ConsultaLancamentos extends React.Component {\n\n    state = {\n        ano: '',\n        mes: '',\n        tipoLancamento: '',\n        statusLancamento: '',\n        showConfirmDialog: false,\n        lancamentoDeletar: '',\n        descricao: '',\n        lancamentos: []\n    }\n\n\n    constructor() {\n        super();\n        this.service = new LancamentoService();\n    }\n\n    buscar = () => {\n        if (!this.state.ano) {\n            messages.mensagemAlerta('O Ano é obrigatório na consulta')\n            return false;\n        }\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado')\n        const filtro = {\n            ano: this.state.ano,\n            mes: this.state.mes,\n            tipo: this.state.tipoLancamento,\n            usuario: usuarioLogado.id,\n            descricao: this.state.descricao\n        }\n\n        this.service\n            .consultar(filtro)\n            .then(resposta => {\n                if (resposta.data.length < 1) {\n                    messages.mensagemAlerta('Nenhum registro encontrado para os parâmetros informados')\n                }\n                this.setState({ lancamentos: resposta.data })\n\n            }).catch(error => {\n                messages.mensagemErro('Erro inesperado ao realizar consulta: ', error)\n            })\n    }\n\n    editar = (id) => {\n        this.props.history.push(`/cadastro-lancamentos/${id}`)\n    }\n\n    alterarStatus = (lancamento, status) => {\n        this.service\n            .alterarStatus(lancamento.id, status)\n            .then(response => {\n                const lancamentos = this.state.lancamentos;\n                const index = lancamentos.indexOf(lancamento)\n                if (index !== -1) {\n                    lancamento['statusLancamento'] = status\n                    lancamento[index] = lancamento\n                    this.setState({ lancamentos });\n                }\n                messages.mensagemSucesso('Status atualizado com sucesso!')\n            }).catch(error => {\n                messages.mensagemErro('Não foi possível atualizar o status', error.response)\n            })\n    }\n\n    abrirConfirmacao = (lancamento) => {\n        this.setState({ showConfirmDialog: true, lancamentoDeletar: lancamento })\n    }\n\n    cancelarDelecao = () => {\n        this.setState({ showConfirmDialog: false, lancamentoDeletar: [] })\n    }\n\n    deletar = () => {\n        this.service\n            .delete(this.state.lancamentoDeletar.id)\n            .then(response => {\n                const lancamentos = this.state.lancamentos\n                const index = lancamentos.indexOf(this.state.lancamentoDeletar)\n                lancamentos.splice(index, 1)\n                this.setState({ lancamentos: lancamentos, showConfirmDialog: false })\n                messages.mensagemSucesso('Deletado com sucesso!')\n            }).catch(error => {\n                messages.mensagemErro('Não foi possível deletar o lançamento: ', error)\n            })\n    }\n    render() {\n        const lista = this.service.obterListaMeses();\n        const tiposLancamento = this.service.obterTipos();\n        const confirmDialogFooter = (\n            <div>\n                <Button label=\"Sim\" icon=\"pi pi-check\" onClick={this.deletar} />\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao} />\n            </div>\n        );\n\n        return (\n            <Card title=\"Buscar Lançamentos\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <div className=\"bs-component\">\n                            <FormGroup htmlFor=\"inputAno\" label=\"Ano: *\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"inputAno\"\n                                    aria-describedby=\"anoHelp\"\n                                    placeholder=\"Digite o ano\"\n                                    onChange={e => this.setState({ ano: e.target.value })}\n                                />\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"inputMes\" label=\"Mes: \">\n                                <SelectMenu\n                                    id=\"inputMes\"\n                                    value={this.state.mes}\n                                    onChange={e => this.setState({ mes: e.target.value })}\n                                    className=\"form-control\" lista={lista}>\n\n                                </SelectMenu>\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"inputDescricao\" label=\"Descrição: \">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"inputDescricao\"\n                                    aria-describedby=\"descricaoHelp\"\n                                    placeholder=\"Digite a descrição\"\n                                    onChange={e => this.setState({ descricao: e.target.value })}\n                                />\n                            </FormGroup>\n\n\n                            <FormGroup htmlFor=\"inputTipoLancamento\" label=\"Tipo do Lançamento:\">\n                                <SelectMenu\n                                    id=\"inputTipoLancamento\"\n                                    value={this.state.tipoLancamento}\n                                    onChange={e => this.setState({ tipo: e.target.value })}\n                                    className=\"form-control\"\n                                    lista={tiposLancamento}>\n\n                                </SelectMenu>\n                            </FormGroup>\n                            <button\n                                onClick={this.buscar}\n                                type=\"button\"\n                                className=\"btn btn-success\">\n                                <i className=\"pi pi-search\">Buscar</i>\n                            </button>\n                            <button\n                                onClick={e => this.props.history.push('/cadastro-lancamentos')}\n                                type=\"button\"\n                                className=\"btn btn-primary\">\n                                <i className=\"pi pi-plus\"> Cadastrar</i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <br />\n\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"bs-component\">\n                            <LancamentosTable\n                                lancamentos={this.state.lancamentos}\n                                deleteAction={this.abrirConfirmacao}\n                                editarAction={this.editar}\n                                alterarStatus={this.alterarStatus}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Dialog\n                        header=\"Deletar Lançamento\"\n                        visible={this.state.showConfirmDialog}\n                        style={{ width: '50vw' }}\n                        modal={true}\n                        footer={confirmDialogFooter}\n                        onHide={() => this.setState({ showConfirmDialog: false })}>\n                        Confirma a exclusão desse lancamento? essa ação não poderá ser desfeita.\n                    </Dialog>\n\n\n                </div>\n            </Card>\n        )\n    }\n\n}\n\nexport default withRouter(ConsultaLancamentos);","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Card from '../../components/card';\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from '../../components/select-menu'\nimport LancamentoService from '../../app/services/lancamentoService';\nimport * as messages from '../../components/toastr'\nimport LocalStorageService from '../../app/services/localStorageService';\n\nclass CadastroLancamentos extends React.Component {\n\n    state = {\n        id: null,\n        descricao: '',\n        mes: '',\n        ano: '',\n        valor: 0,\n        tipoLancamento: '',\n        statusLancamento: '',\n        idUsuario: 0,\n        atualizando: false\n    }\n\n\n    constructor() {\n        super();\n        this.service = new LancamentoService();\n    }\n\n    componentDidMount() {\n        const params = this.props.match.params\n        if (params.id) {\n            this.service.buscarPeloId(params.id)\n                .then(response => {\n                    this.setState({ ...response.data, atualizando: true })\n                    console.log(response.data)\n                }).catch(error => {\n                    messages.mensagemErro('Lancamento não localizado pelo id ', params.id, error.response.data)\n                })\n        }\n    }\n\n    submit = () => {\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado')\n        const { descricao, mes, ano, valor, tipoLancamento } = this.state\n        const lancamento = { descricao, mes, ano, valor, tipoLancamento, idUsuario: usuarioLogado.id }\n\n        try {\n            this.service.validar(lancamento)\n        } catch (erro) {\n            const mensagens = erro.mensagens;\n            mensagens.forEach(msg => { messages.mensagemErro(msg) });\n            return false;\n        }\n\n\n        this.service.salvar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos')\n                messages.mensagemSucesso('Lancamento cadastrado com sucesso')\n            }).catch(error => {\n                messages.mensagemErro('Erro ao tentar salvar lançamento', error.response.data)\n            })\n    }\n\n    atualizar = () => {\n        const { descricao, mes, ano, valor, tipoLancamento, statusLancamento, idUsuario, id } = this.state\n        const lancamento = { descricao, mes, ano, valor, tipoLancamento, statusLancamento, idUsuario, id }\n        this.service.atualizar(lancamento)\n            .then(response => {\n                this.props.history.push('/consulta-lancamentos')\n                messages.mensagemSucesso('Alterações realizadas comsucesso')\n            }).catch(error => {\n                messages.mensagemErro('Erro ao tentar atualizar lançamento', error.response.data)\n            })\n    }\n\n    handleChange = (evento) => {\n        const value = evento.target.value;\n        const name = evento.target.name;\n        this.setState({ [name]: value })\n    }\n\n\n    render() {\n\n        const tipos = this.service.obterTipos();\n        const meses = this.service.obterListaMeses();\n        return (\n            <Card title={this.state.atualizando ? 'Atualização de Lancamento' : 'Cadastro de Lancamentos'}>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <FormGroup id=\"inputDescricao\" label=\"Descrição: *\">\n                            <input\n                                id=\"inputDescricao\"\n                                type=\"text\"\n                                name=\"descricao\"\n                                className=\"form-control\"\n                                value={this.state.descricao}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputAno\" label=\"Ano *\">\n                            <input\n                                id=\"inputAno\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"ano\"\n                                value={this.state.ano}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-6\">\n\n                        <FormGroup id=\"inputMes\" label=\"Mês *\">\n                            <SelectMenu\n                                id=\"inputMes\"\n                                lista={meses}\n                                name=\"mes\"\n                                className=\"form-control\"\n                                value={this.state.mes}\n                                onChange={this.handleChange}\n\n                            />\n                        </FormGroup>\n\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputValor\" label=\"Valor: *\">\n                            <input\n                                id=\"inputValor\"\n                                type=\"text\"\n                                name=\"valor\"\n                                className=\"form-control\"\n                                value={this.state.valor}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputTipo\" label=\"Tipo: *\">\n                            <SelectMenu\n                                id=\"inputTipo\"\n                                lista={tipos}\n                                name=\"tipoLancamento\"\n                                className=\"form-control\"\n                                value={this.state.tipoLancamento}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FormGroup id=\"inputStatus\" label=\"Status\">\n                            <input\n                                id=\"inputStatus\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"statusLancamento\"\n                                disabled\n                                value={this.state.statusLancamento}\n                                onChange={this.handleChange}\n                            />\n                        </FormGroup>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        {this.state.atualizando ? (\n                            <button\n                                onClick={this.atualizar}\n                                className=\"btn btn-primary\">\n                                <i className=\"pi pi-refresh\"></i> Atualizar\n                            </button>\n                        ) : (\n                                <button\n                                    onClick={this.submit}\n                                    className=\"btn btn-success\">\n                                    <i className=\"pi pi-save\"></i> Salvar\n                                </button>\n\n                            )\n                        }\n\n                        <button\n                            onClick={e => this.props.history.push('/consulta-lancamentos')}\n                            className=\"btn btn-danger\"><i className=\"pi pi-backward\"></i> Cancelar</button>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\nexport default withRouter(CadastroLancamentos);","import React from 'react';\nimport CadastroUsuario from '../views/cadastroUsuario'\nimport Login from '../views/login'\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom'\nimport Home from '../views/home';\nimport ConsultaLancamento from '../views/lancamentos/consulta-lancamentos'\nimport cadastroLancamentos from '../views/lancamentos/cadastro-lancamentos';\nimport { AuthConsumer } from './ProvedorAutenticacao'\n\nfunction RotaAutenticada({ component: Component, isUsuarioAutenticado, ...props }) {\n    return (\n        <Route {...props} render={(componentProps) => {\n            if (isUsuarioAutenticado) {\n                return (\n                    <Component{...componentProps} />\n                )\n            } else {\n                return (\n                    <Redirect to={{ pathname: '/login', state: { from: componentProps.location } }} />\n                )\n\n            }\n        }} />\n    )\n}\n\nfunction Rotas(props) {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/cadastro-usuarios\" component={CadastroUsuario} />\n\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/home\" component={Home} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/consulta-lancamentos\" component={ConsultaLancamento} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/cadastro-lancamentos/:id?\" component={cadastroLancamentos} />\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default () => (\n    <AuthConsumer>\n        {(context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />)}\n    </AuthConsumer>\n)","import React from 'react'\n\nfunction NavbarItem({ render, ...props }) {\n    if (render) {\n        return (\n            <li className=\"nav-item\">\n                <a\n                    className=\"nav-link\"\n                    href={props.href}\n                    onClick={props.onClick}\n                >{props.label}\n\n                </a>\n            </li>\n        )\n    } else {\n        return false;\n    }\n}\n\nexport default NavbarItem;","import React from 'react'\nimport NavbarItem from './nav-bar-item';\nimport { AuthConsumer } from '../main/ProvedorAutenticacao'\n\nfunction NavBar(props) {\n  return (\n    <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\n      <div className=\"container\">\n        <a href=\"#/home\" className=\"navbar-brand\" >Minhas Finanças</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav\">\n            <NavbarItem render={props.isUsuarioAutenticado} href=\"#/home\" label=\"home\" />\n            <NavbarItem render={props.isUsuarioAutenticado} href=\"#/cadastro-usuarios\" label=\"Usuários\" />\n            <NavbarItem render={props.isUsuarioAutenticado} href=\"#/consulta-lancamentos\" label=\"Lançamentos\" />\n            <NavbarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"#/login\" label=\"Sair\" />\n\n          </ul>\n\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default () => (\n  <AuthConsumer>\n    {(context) => (<NavBar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />)}\n  </AuthConsumer>\n)","import React from 'react';\nimport Rotas from './rotas'\nimport NavBar from '../components/navbar'\n\nimport 'toastr/build/toastr.min.js'\n\nimport 'bootswatch/dist/flatly/bootstrap.css'\nimport '../custom.min.css'\nimport 'toastr/build/toastr.css'\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport ProvedorAutenticacao from './ProvedorAutenticacao';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <ProvedorAutenticacao>\n        <NavBar />\n        <div className=\"container\">\n          <Rotas />\n        </div>\n      </ProvedorAutenticacao>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n"],"sourceRoot":""}